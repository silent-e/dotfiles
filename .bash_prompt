      BLACK="\[\033[0;0m\]"
       BLUE="\[\033[0;34m\]"
      BROWN="\[\033[0;33m\]"
 COLOR_NONE="\[\e[0m\]"
       CYAN="\[\033[0;36m\]"
      GREEN="\[\033[0;32m\]"
 LIGHT_GRAY="\[\033[1;37m\]"
LIGHT_GREEN="\[\033[1;32m\]"
  LIGHT_RED="\[\033[1;31m\]"
     PURPLE="\[\033[0;35m\]"
        RED="\[\033[0;31m\]"
      WHITE="\[\033[0;37m\]"
     YELLOW="\[\033[0;33m\]"

function tree {
    find ${1:-.} -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
}

function parse_git_branch {
    git rev-parse --git-dir &> /dev/null
    git_status="$(git status 2> /dev/null)"
    git_stash="$(git stash list 2> /dev/null)"
    branch_pattern="^On branch ([^${IFS}]*)"
    remote_pattern="Your branch is (.*) by"
    diverge_pattern="Your branch and (.*) have diverged"
    if [[ ! ${git_status}} =~ "working tree clean" ]]; then
        state="${RED}⚡"
    fi
    if [[ -n ${git_stash} ]]; then
        stash="${RED}*"
    fi
    # add an else if or two here if you want to get more specific
    if [[ ${git_status} =~ ${remote_pattern} ]]; then
        if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
            remote="${YELLOW}↑"
        else
            remote="${YELLOW}↓"
        fi
    fi
    if [[ ${git_status} =~ ${diverge_pattern} ]]; then
        remote="${YELLOW}↕"
    fi
    if [[ ${git_status} =~ ${branch_pattern} ]]; then
        branch=${BASH_REMATCH[1]}
        echo " [${branch}]${remote}${stash}${state}"
    fi
}

function prompt_func() {
    TITLEBAR='\[\e]2;\w\a\]'
    prompt="${TITLEBAR}${GREEN}\w${YELLOW}$(parse_git_branch)${COLOR_NONE}\n"
    PS1="${prompt}➔  "
}

PROMPT_COMMAND=prompt_func
